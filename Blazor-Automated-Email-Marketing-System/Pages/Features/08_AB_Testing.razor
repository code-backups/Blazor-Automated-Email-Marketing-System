@page "/Features/08"
@inject DataService DataService
@using Blazor_Automated_Email_Marketing_System.Models
@using Blazor_Automated_Email_Marketing_System.Services
@using System.Diagnostics

<h1>Requirement 82 - A/B Testing</h1>


@code{
    private DataService? _dataService;


    public void SendABTestEmails(Campaign campaign)
    {
        var allSubscribers = _dataService!.GetAllSubscribers().Result;
        var allSegments = _dataService.GetAllSegments().Result;
        var allEmailMessages = _dataService.GetAllEmailMessages().Result;

        // Get the targeted Segment from the Campaign
        var targetSegmentIds = campaign.SegmentIdsCsv.Split(',').Select(int.Parse).ToList();
        var chosenSegmentId = targetSegmentIds.FirstOrDefault();
        var chosenSegment = allSegments.FirstOrDefault(segment => segment.Id == chosenSegmentId);

        // Get the subscribers of the targeted Segment
        Debug.Assert(chosenSegment != null, nameof(chosenSegment) + " != null");
        var targetSubscriberIds = chosenSegment.SubscriberIdsCsv.Split(',').Select(int.Parse).ToList();
        var targetSubscribers = allSubscribers.Where(subscriber => targetSubscriberIds.Contains(subscriber.Id)).ToList();

        // Get the email messages for the campaign
        var emailMessageIds = campaign.EmailMessageIdsCsv.Split(',').Select(int.Parse).ToList();
        var emailMessageA = allEmailMessages.FirstOrDefault(emailMessage => emailMessage.Id == emailMessageIds[0]);
        var emailMessageB = allEmailMessages.FirstOrDefault(emailMessage => emailMessage.Id == emailMessageIds[1]);

        // Split the subscribers into two groups (A and B)
        var groupA = new List<Subscriber>();
        var groupB = new List<Subscriber>();

        for (var i = 0; i < targetSubscribers.Count; i++)
        {
            if (i % 2 == 0)
            {
                groupA.Add(targetSubscribers[i]);
            }
            else
            {
                groupB.Add(targetSubscribers[i]);
            }
        }

        // Send EmailMessage A to group A and EmailMessage B to group B
        SendEmail(groupA, emailMessageA);
        SendEmail(groupB, emailMessageB);
    }

    private void SendEmail(List<Subscriber> groupB, EmailMessage? emailMessageB)
    {
        // throw new NotImplementedException();
    }
}
