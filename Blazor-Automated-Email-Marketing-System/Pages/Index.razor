@page "/"
@using Newtonsoft.Json.Linq
@using Newtonsoft.Json

@inject DataService DataService

@code {

    protected override async Task OnInitializedAsync()
    {
        var campaigns = await DataService.GetAllCampaigns();
        if (campaigns.Count == 0)
        {
            var sampleDataJson = await File.ReadAllTextAsync("wwwroot/SampleData/sampledata.json");
            var sampleDataObject = JObject.Parse(sampleDataJson);

            var campaignsArray = sampleDataObject["campaigns"]?.ToString();
            if (campaignsArray != null)
            {
                campaigns = JsonConvert.DeserializeObject<List<Campaign>>(campaignsArray);
                foreach (var campaign in campaigns)
                {
                    if (campaign.SubscriberSegmentIds == null)
                    {
                        campaign.SubscriberSegmentIds = Array.Empty<int>();
                    }

                    if (campaign.SubscriberSegmentIds.Any())
                    {
                        var segmentIds = new List<int>();
                        foreach (var segmentId in campaign.SubscriberSegmentIds)
                        {
                            var segment = await DataService.GetSegmentById(segmentId);
                            if (segment != null)
                            {
                                segmentIds.Add(segment.Id);
                            }
                            else
                            {
                                Console.WriteLine($"Segment with ID {segmentId} not found.");
                            }
                        }
                        campaign.SubscriberSegmentIds = segmentIds.ToArray();
                    }

                    if (campaign.EmailMessageIds != null && campaign.EmailMessageIds.Any())
                    {
                        var emailMessageIds = new List<int>();
                        foreach (var emailMessageId in campaign.EmailMessageIds)
                        {
                            var emailMessage = await DataService.GetEmailById(emailMessageId);
                            if (emailMessage != null)
                            {
                                emailMessageIds.Add(emailMessage.Id);
                            }
                            else
                            {
                                Console.WriteLine($"Email message with ID {emailMessageId} not found.");
                            }
                        }
                        campaign.EmailMessageIds = emailMessageIds.ToArray();
                    }

                    await DataService.CreateCampaign(campaign);
                }
            }
        }
    }

}