@using System.Timers
@inherits LayoutComponentBase

<PageTitle>@Title</PageTitle>

<div class="page">

    <main>

        <RadzenLayout Style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body'; height: 100%;">
            <RadzenHeader>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10">
                    <RadzenSidebarToggle Click="@(() => _sidebar2Expanded = !_sidebar2Expanded)"/>
                    <RadzenLabel Text="@Title"/>
                </RadzenStack>
            </RadzenHeader>
            <RadzenSidebar @bind-Expanded="@_sidebar2Expanded">
                <RadzenPanelMenu>
                    <RadzenPanelMenuItem Text="Dash" Icon="home" Path="/"/>
                    <RadzenPanelMenuItem Text="Weather" Icon="donut_large" Path="fetchdata"/>
                </RadzenPanelMenu>
            </RadzenSidebar>
            <RadzenBody>
                <div class="rz-p-4">
                    <!-- Radzen defined but not loading -->
                    @Body
                </div>
            </RadzenBody>
        </RadzenLayout>
        <RadzenDialog/>
        <RadzenNotification/>
        <RadzenContextMenu/>
        <RadzenTooltip/>

    </main>

</div>


@code
{
        private const string Title = "AutoEMS";
    private bool _sidebar2Expanded;
    private Timer _timer = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _timer = new Timer(2000);
        _timer.Elapsed += async (sender, args) =>
        {
            _sidebar2Expanded = false;
            await InvokeAsync(StateHasChanged);
        };
        _timer.AutoReset = false;
        _timer.Enabled = true;
    }
}