# This workflow demonstrates how you can use various environments (development, staging, production) in Github.

name: CI + CD demo pipeline

# Define when the workflow should run. On a push to main, a PR to main or manually with workflow_dispatch
on: 
  push:
    branches: [ main ] 
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Define some jobs that should run

jobs:
  # Define a build job
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Code_scanning
        run: echo Imagine we are linting and scanning our code here
      - name: Compile
        run: echo Imagine we are compiling our code here
      - name: Test
        run: echo Imagine we are testing our code here 
      - name: ChecksComplete
        run: echo Checks complete code built successfully
    
    # Build and test have completed successfully

  # Define a deploy to development environment job
  DeployDev:
    name: Deploy to Development

    # Job runs only if the event is a pull request
    # if: github.event_name == 'pull_request'

    # TODO hack for testing ci/cd ---------------------------------------------------> remove
    if: github.event_name == 'pull_request' || github.event_name == 'push' # adds push

    # The job needs the build job to pass first
    needs: [ Build ]
    runs-on: ubuntu-latest
    # Define some environment variables
    environment: 
      # The environment name must match the environment name in the repository
      name: Development
      url: 'http://dev.myapp.com'
    steps:
      - name: Deploy
        run: echo Deploying to Development http://dev.myapp.com
  
  # Our deployment to Staging environment
  DeployStaging:
    name: Deploy to Staging
    # deploy to Staging only if we are committing to main
    if: github.event.ref == 'refs/heads/main'
    needs: [ Build ]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: 'http://test.myapp.com'
    steps:
    - name: Deploy
      run: echo Deploying to Staging http://test.myapp.com
  
  # Deploy to Production environment
  DeployProduction:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo Deploying to Production http://myapp.com

      # TODO: Add Docker Hub credentials here
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
