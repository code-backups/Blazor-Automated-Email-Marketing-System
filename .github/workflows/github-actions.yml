name: CI/CD Workflow

on:
  push:
    branches:
      - main

env:
  MSBUILDDIAGNOSTIC: true

jobs:
  lint-csharp-development:
    runs-on: ubuntu-latest

    steps:
      - name: Clear NuGet cache
        run: dotnet nuget locals all --clear

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Install dependencies
        run: dotnet restore ./Blazor-Automated-Email-Marketing-System/Blazor-Automated-Email-Marketing-System.csproj

      - name: Lint with .NET Analysers
        run: dotnet build ./Blazor-Automated-Email-Marketing-System/Blazor-Automated-Email-Marketing-System.csproj --no-restore -c Release -p:TreatWarningsAsErrors=false

  test-development:
    runs-on: ubuntu-latest
    needs: lint-csharp-development

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Install dependencies
        run: dotnet restore ./Blazor-Automated-Email-Marketing-System/Blazor-Automated-Email-Marketing-System.csproj

      #- name: Run unit tests
      #  run: dotnet test ./Blazor-Automated-Email-Marketing-System/Blazor-Automated-Email-Marketing-System.csproj --no-restore --verbosity normal --logger:"console;verbosity=detailed"

  test-staging:
    runs-on: ubuntu-latest
    needs: test-development

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Install dependencies
        run: dotnet restore ./Blazor-Automated-Email-Marketing-System/Blazor-Automated-Email-Marketing-System.csproj

      - name: Run integration tests
        run: dotnet test ./Blazor-Automated-Email-Marketing-System/Blazor-Automated-Email-Marketing-System.csproj --filter Category=Integration --no-restore --verbosity normal

  build-and-push:
    runs-on: ubuntu-latest
    needs: test-staging

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        env:
          VERSION: v1.0.0
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/blazor-automated-email-marketing-system:${VERSION} .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/blazor-automated-email-marketing-system:${VERSION}
